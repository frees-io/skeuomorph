language: scala

jdk:
- oraclejdk8

scala:
- 2.12.8
- 2.11.12

before_cache:
- du -h -d 1 $HOME/.ivy2/
- du -h -d 2 $HOME/.sbt/
- du -h -d 4 $HOME/.coursier/
- find $HOME/.sbt -name "*.lock" -type f -delete
- find $HOME/.ivy2/cache -name "ivydata-*.properties" -type f -delete

cache:
  directories:
  - "$HOME/.ivy2/cache"
  - "$HOME/.coursier/cache"
  - "$HOME/.sbt"

install:
- rvm use 2.3.3 --install --fuzzy
- gem update --system
- gem install sass
- gem install jekyll -v 3.8.3

script:
  - curl -s https://codecov.io/bash > .codecov
  - sed -i -e 's/TRAVIS_.*_VERSION/^TRAVIS_.*_VERSION=/' .codecov
  - chmod +x .codecov
  - if [ $TRAVIS_SCALA_VERSION = "2.12.8" ]; then sbt ++$TRAVIS_SCALA_VERSION clean test coverageReport coverageAggregate docs/tut readme/tut; fi
  - if [ $TRAVIS_SCALA_VERSION = "2.12.8" ]; then ./.codecov -X gcov; fi
  - if [ $TRAVIS_SCALA_VERSION = "2.11.12" ]; then sbt ++$TRAVIS_SCALA_VERSION clean test; fi

stages:
  - test
  - deploy
  - microsite

jobs:
  include:
    - stage: deploy
      scala: 2.12.8
      if: branch = master AND type != pull_request
      script:
        - bash <(curl -s https://codecov.io/bash) -t 2a67f0e7-2605-4f25-abab-516ee953a08c
        - if grep -q "SNAPSHOT" version.sbt; then
            sbt +publish;
          else
            sbt orgUpdateDocFiles;
            git reset --hard HEAD;
            git clean -f;
            git checkout master;
            git pull origin master;
            openssl aes-256-cbc -K $encrypted_ca54c9c78452_key -iv $encrypted_ca54c9c78452_iv -in secring.gpg.enc -out secring.gpg -d;
            sbt release;
          fi
    - stage: microsite
      scala: 2.12.8
      if: branch = master AND type != pull_request
      script:
        - if grep -q "SNAPSHOT" version.sbt; then
            echo "Skipping microsite publication, snapshot version";
          else
            sbt docs/publishMicrosite;
          fi