syntax = "proto3";

package com.acme;

import "models/author.proto";
import "models/hyphenated-name.proto";
import "rating.proto";

message Book {
    reserved 4, 8;
    reserved 12 to 15;
    int64 isbn = 1;
    string title = 2;
    repeated Author author = 3;
    BindingType binding_type = 9;
    Rating rating = 10;
    bool private = 11; // note: private is a reserved word in Scala
    type type = 16; // note: using "type" (a reserved word) as both the field type and field name
    BookStore.Location nearest_copy = 17;
}

message type { // note: type is a reserved word in Scala
    int64 foo = 1;
    Thing thing = 2;
}

message GetBookRequest {
    int64 isbn = 1;
}

message GetBookViaAuthor {
    Author author = 1;
}

service BookService {
    rpc GetBook (GetBookRequest) returns (Book) {}
    rpc GetBooksViaAuthor (GetBookViaAuthor) returns (stream Book) {}
    rpc GetGreatestBook (stream GetBookRequest) returns (Book) {}
    rpc GetBooks (stream GetBookRequest) returns (stream Book) {}
    rpc GetRatingOfAuthor (Author) returns (Rating) {}
}

message BookStore {
    message Location {
        message Country {
            string name = 1;
            string iso_code = 2;
        }
        string town = 1;
        Country country = 2;
    }

    string name = 1;
    map<int64, string> books = 2;
    repeated Genre genres = 3;

    oneof payment_method {
        int64 credit_card_number = 4;
        int32 cash = 5;
        string iou_note = 6;
        Book barter = 7;
    }

    oneof either {
        int64 first = 8;
        int32 second = 9;
    }

    Location location = 10;

    enum CoffeeQuality {
      DELICIOUS = 0;
      DRINKABLE = 1;
    }

    CoffeeQuality coffee_quality = 11;

}

enum Genre {
    option allow_alias = true;
    UNKNOWN = 0;
    SCIENCE_FICTION = 1;
    SPECULATIVE_FICTION = 1;
    POETRY = 2;
    SCI_FI = 1;
}

enum BindingType {
    HARDCOVER = 0;
    PAPERBACK = 5;
}
